"use strict";(self.webpackChunkairview_next=self.webpackChunkairview_next||[]).push([[4386],{"./stories/NewBranchDialog.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{APIFailure:()=>APIFailure,Default:()=>Default,WithControlBar:()=>WithControlBar,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _home_runner_work_airview_next_airview_next_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),_home_runner_work_airview_next_airview_next_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),_home_runner_work_airview_next_airview_next_node_modules_babel_runtime_regenerator_index_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@babel/runtime/regenerator/index.js"),_home_runner_work_airview_next_airview_next_node_modules_babel_runtime_regenerator_index_js__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_home_runner_work_airview_next_airview_next_node_modules_babel_runtime_regenerator_index_js__WEBPACK_IMPORTED_MODULE_2__),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),_mui_material_Button__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mui/material/Button/Button.js"),_components_appbar__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./components/appbar/index.js"),_components_appbar_ControlBarComponent__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./components/appbar/ControlBarComponent.jsx"),console=__webpack_require__("./node_modules/console-browserify/index.js"),__jsx=react__WEBPACK_IMPORTED_MODULE_0__.createElement;function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){(0,_home_runner_work_airview_next_airview_next_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__.Z)(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}const __WEBPACK_DEFAULT_EXPORT__={title:"App Bar/NewBranchDialog",component:_components_appbar__WEBPACK_IMPORTED_MODULE_3__.BK,parameters:{},tags:["autodocs"]};var testCollection={source:"github",repo:"airwalk_patterns",owner:"airwalk-digital",base_branch:"main",branch:"main",path:"providers",reference:"provider",collections:["services"]},branches=[{name:"main",commit:{sha:"53bfd8457509778140caa47b01c6476d661f1b34",url:"https://api.github.com/repos/AirWalk-Digital/airwalk_patterns/commits/53bfd8457509778140caa47b01c6476d661f1b34"},protected:!0},{name:"branch-1",commit:{sha:"53bfd8457509778140caa47b01c6476d661f1b34",url:"https://api.github.com/repos/AirWalk-Digital/airwalk_patterns/commits/53bfd8457509778140caa47b01c6476d661f1b34"},protected:!1},{name:"branch-2",commit:{sha:"09a01dc4e148c35412d3a6a00a384930a41b813b",url:"https://api.github.com/repos/AirWalk-Digital/airwalk_patterns/commits/09a01dc4e148c35412d3a6a00a384930a41b813b"},protected:!1},{name:"branch-3",commit:{sha:"7080423b89568b0427cb781f8b753f52fbc394e0",url:"https://api.github.com/repos/AirWalk-Digital/airwalk_patterns/commits/7080423b89568b0427cb781f8b753f52fbc394e0"},protected:!1}],Template=function Template(args){var _useState=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!0),isOpen=_useState[0],setIsOpen=_useState[1],_useState2=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({}),context=_useState2[0],setContext=_useState2[1],handleClose=function(){var _ref=(0,_home_runner_work_airview_next_airview_next_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_5__.Z)(_home_runner_work_airview_next_airview_next_node_modules_babel_runtime_regenerator_index_js__WEBPACK_IMPORTED_MODULE_2___default().mark((function _callee(context){var delay;return _home_runner_work_airview_next_airview_next_node_modules_babel_runtime_regenerator_index_js__WEBPACK_IMPORTED_MODULE_2___default().wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:if(console.log("context",context),context){_context.next=4;break}return setIsOpen(!1),_context.abrupt("return");case 4:return delay=function delay(ms){return new Promise((function(resolve){return setTimeout(resolve,ms)}))},_context.next=7,delay(2e3);case 7:_context.t0=args.result,_context.next="success"===_context.t0?10:"error"===_context.t0?13:14;break;case 10:return setContext(JSON.stringify(context)),setIsOpen(!1),_context.abrupt("break",14);case 13:throw new Error("An error occurred");case 14:case"end":return _context.stop()}}),_callee)})));return function handleClose(_x){return _ref.apply(this,arguments)}}();return __jsx("div",null,__jsx(_mui_material_Button__WEBPACK_IMPORTED_MODULE_6__.Z,{onClick:function handleOpen(){setIsOpen(!0)}},"Open Dialog"),__jsx(_components_appbar__WEBPACK_IMPORTED_MODULE_3__.BK,{dialogOpen:isOpen,handleDialog:handleClose}),__jsx("div",null,String(context)))};Template.displayName="Template";var Default=Template.bind({});Default.args={result:"success"},Default.argTypes={handleDialog:{action:"clicked"}};var APIFailure=Template.bind({});APIFailure.args={result:"error"};var WithControlBar=function WithControlBar(){var _useState3=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),isOpen=_useState3[0],setIsOpen=_useState3[1],_useState4=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_objectSpread(_objectSpread({},testCollection),{},{branch:"branch-1"})),context=_useState4[0],setContext=_useState4[1],_useState5=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!0),editMode=_useState5[0],_useState6=(_useState5[1],(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(testCollection)),collection=_useState6[0];_useState6[1];function dummyFunction(){}return __jsx("div",null,__jsx(_components_appbar_ControlBarComponent__WEBPACK_IMPORTED_MODULE_4__.V,{open:!0,top:0,handleEdit:dummyFunction,handleAdd:dummyFunction,handleRefresh:dummyFunction,handlePrint:dummyFunction,handlePresentation:dummyFunction,onContextUpdate:function onContextUpdate(context){setContext(context)},collection,context,branches,editMode,setControlBarOpen:dummyFunction,handleNewBranch:function handleAdd(result){setIsOpen(!0)}}),__jsx(_components_appbar__WEBPACK_IMPORTED_MODULE_3__.BK,{dialogOpen:isOpen,handleDialog:function handleClose(context){setContext(JSON.stringify(context)),setIsOpen(!1)}}),__jsx("div",{style:{position:"absolute",top:"100px"}},"Result: ",String(context)))};WithControlBar.displayName="WithControlBar",Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => {\n  const [isOpen, setIsOpen] = useState(true);\n  const [context, setContext] = useState({});\n\n  /**\n  * Handles the opening of the dialog.\n  */\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n  /**\n  * Handles the closing of the dialog. and processing the result\n  */\n  const handleClose = async context => {\n    console.log(\"context\", context);\n    if (!context) {\n      setIsOpen(false);\n      return;\n    }\n    const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n    await delay(2000);\n    switch (args.result) {\n      case 'success':\n        setContext(JSON.stringify(context));\n        setIsOpen(false);\n        break;\n      case 'error':\n        throw new Error('An error occurred');\n    }\n  };\n  return <div>\n      <Button onClick={handleOpen}>Open Dialog</Button>\n      <NewBranchDialog dialogOpen={isOpen} handleDialog={handleClose} />\n      <div>{String(context)}</div>\n    </div>;\n}",...Default.parameters?.docs?.source}}},APIFailure.parameters={...APIFailure.parameters,docs:{...APIFailure.parameters?.docs,source:{originalSource:"args => {\n  const [isOpen, setIsOpen] = useState(true);\n  const [context, setContext] = useState({});\n\n  /**\n  * Handles the opening of the dialog.\n  */\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n  /**\n  * Handles the closing of the dialog. and processing the result\n  */\n  const handleClose = async context => {\n    console.log(\"context\", context);\n    if (!context) {\n      setIsOpen(false);\n      return;\n    }\n    const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n    await delay(2000);\n    switch (args.result) {\n      case 'success':\n        setContext(JSON.stringify(context));\n        setIsOpen(false);\n        break;\n      case 'error':\n        throw new Error('An error occurred');\n    }\n  };\n  return <div>\n      <Button onClick={handleOpen}>Open Dialog</Button>\n      <NewBranchDialog dialogOpen={isOpen} handleDialog={handleClose} />\n      <div>{String(context)}</div>\n    </div>;\n}",...APIFailure.parameters?.docs?.source}}},WithControlBar.parameters={...WithControlBar.parameters,docs:{...WithControlBar.parameters?.docs,source:{originalSource:'() => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [context, setContext] = useState({\n    ...testCollection,\n    branch: "branch-1"\n  });\n  const [editMode, setEditMode] = useState(true);\n  const [collection, setCollection] = useState(testCollection);\n  function dummyFunction() {}\n  const handleAdd = result => {\n    setIsOpen(true);\n  };\n  const onContextUpdate = context => {\n    setContext(context);\n  };\n  const handleClose = context => {\n    setContext(JSON.stringify(context));\n    setIsOpen(false);\n  };\n  return <div>\n      <ControlBar open={true} top={0} handleEdit={dummyFunction} handleAdd={dummyFunction} handleRefresh={dummyFunction} handlePrint={dummyFunction} handlePresentation={dummyFunction} onContextUpdate={onContextUpdate} collection={collection} context={context} branches={branches} editMode={editMode} setControlBarOpen={dummyFunction} handleNewBranch={handleAdd} />\n     <NewBranchDialog dialogOpen={isOpen} handleDialog={handleClose} />\n      <div style={{\n      position: "absolute",\n      top: "100px"\n    }}>Result: {String(context)}</div>\n    </div>;\n}',...WithControlBar.parameters?.docs?.source}}};const __namedExportsOrder=["Default","APIFailure","WithControlBar"]}}]);